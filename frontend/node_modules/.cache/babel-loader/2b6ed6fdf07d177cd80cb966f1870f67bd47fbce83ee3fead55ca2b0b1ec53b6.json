{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\RecipesProject\\\\frontend\\\\src\\\\component\\\\comments\\\\Comment.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Comment({\n  className,\n  idRecipe\n}) {\n  _s();\n  const [newComment, setNewComment] = useState(\"\");\n  const handleCommentSubmit = () => {\n    // Create a new comment object with the text and recipe id\n    const commentData = {\n      text: newComment,\n      recipeId: idRecipe // Replace with the actual field name used by your API\n    };\n\n    // Make a POST request to add the comment\n    axios.post(\"http://localhost:8000/comments\", commentData).then(response => {\n      console.log(\"Comment posted successfully:\", response.data);\n      // You can update your comment list here, e.g., by making a new GET request for comments.\n      // To update the comment list, you might use a state variable that holds the comments.\n    }).catch(error => {\n      console.error(\"Error posting comment:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typename\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type name...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typecomment\",\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Type something....\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCommentSubmit,\n            type: \"button\",\n            children: \"Post now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Comment, \"hdmU//CB++ZG3hy6Wzlv3cAh5aM=\");\n_c = Comment;\nComment.propTypes = {\n  idRecipe: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired\n};\nexport default styled(Comment)`\n  .container_comment {\n    color: #e23c34;\n    margin-bottom: 50px;\n  }\n  .container_comment h2 {\n    margin-bottom: 10px;\n  }\n  .comment_box {\n    padding: 20px;\n    background-color: #ffffff;\n    padding-bottom: 80px;\n  }\n  .comment_box .typename {\n    width: 100%;\n    height: 50px;\n    background: #fdee82;\n    display: flex;\n    justify-content: center;\n    border: 1px solid #e23c34;\n  }\n  .comment_box .typecomment {\n    width: 100%;\n    height: 100px;\n    background: #fdee82;\n    border: 1px solid #e23c34;\n    margin: 20px 0 20px 0;\n    display: flex;\n    padding-top: 20px;\n  }\n  .comment_box input,\n  textarea {\n    background: transparent;\n    width: auto;\n    flex: 1;\n    border: 0;\n    outline: none;\n    font-size: 15px;\n    font-family: \"Inter\", sans-serif;\n    color: #e23c34;\n    padding-left: 20px;\n  }\n  .typename,\n  .comment_box ::placeholder {\n    color: #e23c34;\n  }\n  .comment_box .button {\n    position: absolute;\n    right: 40px;\n    transform: translateY(-80%);\n    margin-top: 50px;\n    margin-right: 18px;\n  }\n  .comment_box button {\n    background-color: #e23c34;\n    border: 1px solid #e23c34;\n    padding: 10px;\n    margin: 10px;\n    border-radius: 30px;\n    width: 130px;\n    color: #fff;\n    transition: 0.3s ease, color 0.3s ease;\n    cursor: pointer;\n    font-size: medium;\n  }\n  .comment_box button:hover {\n    background-color: #fdee82;\n    border: 1px solid #e23c34;\n    color: #e23c34;\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","useEffect","useState","styled","PropTypes","axios","jsxDEV","_jsxDEV","Comment","className","idRecipe","_s","newComment","setNewComment","handleCommentSubmit","commentData","text","recipeId","post","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/RecipesProject/frontend/src/component/comments/Comment.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nfunction Comment({ className, idRecipe }) {\r\n\r\n  const [newComment, setNewComment] = useState(\"\");\r\n\r\n  const handleCommentSubmit = () => {\r\n    // Create a new comment object with the text and recipe id\r\n    const commentData = {\r\n      text: newComment,\r\n      recipeId: idRecipe, // Replace with the actual field name used by your API\r\n    };\r\n\r\n    // Make a POST request to add the comment\r\n    axios\r\n      .post(\"http://localhost:8000/comments\", commentData)\r\n      .then((response) => {\r\n        console.log(\"Comment posted successfully:\", response.data);\r\n        // You can update your comment list here, e.g., by making a new GET request for comments.\r\n        // To update the comment list, you might use a state variable that holds the comments.\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error posting comment:\", error);\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"container_comment\">\r\n        <h2>Comment</h2>\r\n        <div className=\"comment_box\">\r\n          <div className=\"typename\">\r\n            <input type=\"text\" placeholder=\"Type name...\" />\r\n          </div>\r\n          <div className=\"typecomment\">\r\n            <textarea placeholder=\"Type something....\"></textarea>\r\n          </div>\r\n          <div className=\"button\">\r\n            <button onClick={handleCommentSubmit} type=\"button\">Post now</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nComment.propTypes = {\r\n  idRecipe: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default styled(Comment)`\r\n  .container_comment {\r\n    color: #e23c34;\r\n    margin-bottom: 50px;\r\n  }\r\n  .container_comment h2 {\r\n    margin-bottom: 10px;\r\n  }\r\n  .comment_box {\r\n    padding: 20px;\r\n    background-color: #ffffff;\r\n    padding-bottom: 80px;\r\n  }\r\n  .comment_box .typename {\r\n    width: 100%;\r\n    height: 50px;\r\n    background: #fdee82;\r\n    display: flex;\r\n    justify-content: center;\r\n    border: 1px solid #e23c34;\r\n  }\r\n  .comment_box .typecomment {\r\n    width: 100%;\r\n    height: 100px;\r\n    background: #fdee82;\r\n    border: 1px solid #e23c34;\r\n    margin: 20px 0 20px 0;\r\n    display: flex;\r\n    padding-top: 20px;\r\n  }\r\n  .comment_box input,\r\n  textarea {\r\n    background: transparent;\r\n    width: auto;\r\n    flex: 1;\r\n    border: 0;\r\n    outline: none;\r\n    font-size: 15px;\r\n    font-family: \"Inter\", sans-serif;\r\n    color: #e23c34;\r\n    padding-left: 20px;\r\n  }\r\n  .typename,\r\n  .comment_box ::placeholder {\r\n    color: #e23c34;\r\n  }\r\n  .comment_box .button {\r\n    position: absolute;\r\n    right: 40px;\r\n    transform: translateY(-80%);\r\n    margin-top: 50px;\r\n    margin-right: 18px;\r\n  }\r\n  .comment_box button {\r\n    background-color: #e23c34;\r\n    border: 1px solid #e23c34;\r\n    padding: 10px;\r\n    margin: 10px;\r\n    border-radius: 30px;\r\n    width: 130px;\r\n    color: #fff;\r\n    transition: 0.3s ease, color 0.3s ease;\r\n    cursor: pointer;\r\n    font-size: medium;\r\n  }\r\n  .comment_box button:hover {\r\n    background-color: #fdee82;\r\n    border: 1px solid #e23c34;\r\n    color: #e23c34;\r\n  }\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}