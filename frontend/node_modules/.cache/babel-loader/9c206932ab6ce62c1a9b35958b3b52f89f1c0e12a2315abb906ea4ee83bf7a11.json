{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { getCommentsAction, createCommentAction, updateCommentAction, deleteAllCommentsAction, deleteCommentAction } from \"./usersAction\";\nconst initialState = {\n  comments: []\n};\nexport default createReducer(initialState, {\n  [getCommentsAction]: state => {\n    state.comments = action.payload;\n  },\n  [createCommentAction]: (state, action) => {\n    state.comments.push(action.payload);\n  },\n  [updateCommentAction]: (state, action) => {\n    const updatedComment = action.payload;\n    const commentIndex = state.comments.findIndex(comment => comment.id === updatedComment.id);\n    if (commentIndex !== -1) {\n      state.comments[commentIndex] = updatedComment;\n    }\n  },\n  [deleteAllCommentsAction]: (state, action) => {\n    const commentIdToDelete = action.payload.id;\n    state.comments = state.comments.filter(comment => comment.id !== commentIdToDelete);\n  },\n  [deleteCommentAction]: (state, action) => {\n    state.comments = [];\n  }\n});","map":{"version":3,"names":["createReducer","getCommentsAction","createCommentAction","updateCommentAction","deleteAllCommentsAction","deleteCommentAction","initialState","comments","state","action","payload","push","updatedComment","commentIndex","findIndex","comment","id","commentIdToDelete","filter"],"sources":["C:/Users/Windows10/Documents/GitHub/RecipesProject/frontend/src/context/usersReducer.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getCommentsAction,\r\n  createCommentAction,\r\n  updateCommentAction,\r\n  deleteAllCommentsAction,\r\n  deleteCommentAction,\r\n} from \"./usersAction\";\r\n\r\nconst initialState = {\r\n  comments: [],\r\n};\r\n\r\nexport default createReducer(initialState, {\r\n  [getCommentsAction]: (state) => {\r\n    state.comments = action.payload;\r\n  },\r\n  [createCommentAction]: (state, action) => {\r\n    state.comments.push(action.payload);\r\n  },\r\n  [updateCommentAction]: (state, action) => {\r\n    const updatedComment = action.payload;\r\n    const commentIndex = state.comments.findIndex(\r\n      (comment) => comment.id === updatedComment.id\r\n    );\r\n    if (commentIndex !== -1) {\r\n      state.comments[commentIndex] = updatedComment;\r\n    }\r\n  },\r\n  [deleteAllCommentsAction]: (state, action) => {\r\n    const commentIdToDelete = action.payload.id;\r\n    state.comments = state.comments.filter(\r\n      (comment) => comment.id !== commentIdToDelete\r\n    );\r\n  },\r\n  [deleteCommentAction]: (state, action) => {\r\n    state.comments = [];\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SACEC,iBAAiB,EACjBC,mBAAmB,EACnBC,mBAAmB,EACnBC,uBAAuB,EACvBC,mBAAmB,QACd,eAAe;AAEtB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE;AACZ,CAAC;AAED,eAAeP,aAAa,CAACM,YAAY,EAAE;EACzC,CAACL,iBAAiB,GAAIO,KAAK,IAAK;IAC9BA,KAAK,CAACD,QAAQ,GAAGE,MAAM,CAACC,OAAO;EACjC,CAAC;EACD,CAACR,mBAAmB,GAAG,CAACM,KAAK,EAAEC,MAAM,KAAK;IACxCD,KAAK,CAACD,QAAQ,CAACI,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;EACrC,CAAC;EACD,CAACP,mBAAmB,GAAG,CAACK,KAAK,EAAEC,MAAM,KAAK;IACxC,MAAMG,cAAc,GAAGH,MAAM,CAACC,OAAO;IACrC,MAAMG,YAAY,GAAGL,KAAK,CAACD,QAAQ,CAACO,SAAS,CAC1CC,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKJ,cAAc,CAACI,EAC7C,CAAC;IACD,IAAIH,YAAY,KAAK,CAAC,CAAC,EAAE;MACvBL,KAAK,CAACD,QAAQ,CAACM,YAAY,CAAC,GAAGD,cAAc;IAC/C;EACF,CAAC;EACD,CAACR,uBAAuB,GAAG,CAACI,KAAK,EAAEC,MAAM,KAAK;IAC5C,MAAMQ,iBAAiB,GAAGR,MAAM,CAACC,OAAO,CAACM,EAAE;IAC3CR,KAAK,CAACD,QAAQ,GAAGC,KAAK,CAACD,QAAQ,CAACW,MAAM,CACnCH,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKC,iBAC9B,CAAC;EACH,CAAC;EACD,CAACZ,mBAAmB,GAAG,CAACG,KAAK,EAAEC,MAAM,KAAK;IACxCD,KAAK,CAACD,QAAQ,GAAG,EAAE;EACrB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}